package rina.onepop.club.client.module.exploit.autohat;

import rina.onepop.club.api.ISLClass;
import rina.onepop.club.api.module.Module;
import rina.onepop.club.api.module.impl.ModuleCategory;
import rina.onepop.club.api.module.registry.Registry;
import rina.onepop.club.api.setting.value.ValueEnum;
import rina.onepop.club.api.util.chat.ChatUtil;
import rina.onepop.club.api.util.client.NullUtil;
import rina.onepop.club.api.util.item.SlotUtil;
import rina.onepop.club.client.event.client.ClientTickEvent;
import net.minecraft.init.Items;
import net.minecraft.inventory.ClickType;
import net.minecraft.item.ItemStack;
import team.stiff.pomelo.impl.annotated.handler.annotation.Listener;

/**
 * @author SrRina
 * @since 07/03/2021 at 12:36
 **/
@Registry(name = "Auto Hat", tag = "Auto-Hat", description = "Automatically glitch and dupes with command /hat plugin.", category = ModuleCategory.EXPLOIT)
public class ModuleAutoHat extends Module {
    public static final int HELMET_SLOT_ID = 5;

    public static ValueEnum settingPostHatMode = new ValueEnum("Post Hat Mode", "PostHatMode", "Drop or move to inventory later /hat command.", PostHatMode.MOVE_TO_INVENTORY);

    private ItemStack currentItem;
    private Flag flag = Flag.PRE;

    @Listener
    public void onClientTickEvent(ClientTickEvent event) {
        if (NullUtil.isPlayerWorld()) {
            return;
        }

        ItemStack mainHandItemStack = ISLClass.mc.player.getHeldItemMainhand();
        ItemStack helmetSlotItemStack = SlotUtil.getItemStack(HELMET_SLOT_ID);

        if (this.flag == Flag.PRE) {
            if (helmetSlotItemStack.getItem() == Items.AIR && mainHandItemStack.getItem() != Items.AIR) {
                ChatUtil.message("/hat");
            }

            this.flag = Flag.POST;
        }

        if (this.flag == Flag.POST) {
            if (SlotUtil.isAir(HELMET_SLOT_ID) == false) {
                ClickType k = settingPostHatMode.getValue() == PostHatMode.MOVE_TO_INVENTORY ? ClickType.QUICK_MOVE : ClickType.THROW;

                /*
                 * Handler item with player controller.
                 */
                int slot = SlotUtil.findFirstSlotAirFromInventory();

                if (k == ClickType.THROW || slot == -1) {
                    ISLClass.mc.playerController.windowClick(0, 5, 0, k, ISLClass.mc.player);
                } else {
                    ISLClass.mc.playerController.windowClick(0, 5, 0, k, ISLClass.mc.player);
                    ISLClass.mc.playerController.windowClick(0, slot, 0, k, ISLClass.mc.player);
                    ISLClass.mc.playerController.windowClick(0, 5, 0, k, ISLClass.mc.player);
                    ISLClass.mc.playerController.updateController();
                }
            } else {
                this.flag = Flag.PRE;
            }
        }
    }

    @Override
    public void onEnable() {
        this.flag = Flag.PRE;
    }

    @Override
    public void onDisable() {
        this.flag = Flag.PRE;
    }
}